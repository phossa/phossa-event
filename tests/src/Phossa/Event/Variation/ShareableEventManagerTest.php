<?php
namespace Phossa\Event\Variation;

use Phossa\Event\Event;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-01-29 at 10:37:24.
 */
class ShareableEventManagerTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var ShareableEventManager
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        // the normal copy
        $this->object = new ShareableEventManager;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * test event manager functionalities
     *
     * @covers Phossa\Event\Variation\ShareableEventManager::processEvent
     * @covers Phossa\Event\Variation\ShareableEventManager::attachListener
     */
    public function testProcessEvent()
    {
        $this->object->attachListener(function($evt) {
            echo "TEST";
            return "TEST";
        }, 'test');
        $this->object->processEvent(new Event('test'));
        $this->expectOutputString('TEST');
    }

    /**
     * the global copy
     * @covers Phossa\Event\Variation\ShareableEventManager::getInstance
     */
    public function testgetInstance()
    {
        // global copy not equals to local copy
        $this->assertFalse($this->object === ShareableEventManager::getInstance());

        // global always a single one
        $obj1 = ShareableEventManager::getInstance();
        $obj2 = ShareableEventManager::getInstance();
        $this->assertTrue($obj1 === $obj2);

        // test global manager functionalities
        $obj1->attachListener(function($evt) {
            echo "TEST2";
            return "TEST2";
        }, 'test');
        $obj1->processEvent(new Event('test'));
        $this->expectOutputString('TEST2');
    }

    /**
     * @covers Phossa\Event\Variation\ShareableEventManager::isShareable
     */
    public function testIsShareable()
    {
        // global one
        $obj1 = ShareableEventManager::getInstance();
        // local one
        $obj2 = new ShareableEventManager();

        $this->assertTrue($obj1->isShareable());
        $this->assertFalse($obj2->isShareable());
    }

    /**
     * clone of global copy is ok, but result is not global anymore
     *
     * @covers Phossa\Event\Variation\ShareableEventManager::__clone
     */
    public function testClone1()
    {
        // global one
        $obj1 = ShareableEventManager::getInstance();

        // clone the global one
        $obj2 = clone $obj1;

        $this->assertFalse($obj2->isShareable());
    }

    /**
     * @covers Phossa\Event\Variation\ShareableEventManager::__sleep
     * @expectedException Phossa\Shared\Exception\BadMethodCallException
     * @expectedExceptionMessageRegExp /This is the shareable/
     */
    public function testSleep()
    {
        // global one
        $obj = ShareableEventManager::getInstance();

        serialize($obj);
    }
}
